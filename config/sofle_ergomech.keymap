/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | BSPC  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BSLH  |
            // |  CAPS |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | ENTER |
            //               | CTRL| ALT  | GUI  | SPACE|  LOWER |  | LOWER | SPACE| MINUS | LBKT  | RBKT |

            bindings = <
&kp GRAVE   &kp N1    &kp N2    &kp N3     &kp N4     &kp N5     &kp N6     &kp N7     &kp N8        &kp N9    &kp N0    &kp BSPC
&kp TAB     &kp Q     &kp W     &kp E      &kp R      &kp T      &kp Y      &kp U      &kp I         &kp O     &kp P     &kp BSLH
&kp CAPS    &kp A     &kp S     &kp D      &kp F      &kp G      &kp H      &kp J      &kp K         &kp L     &kp SEMI  &kp SQT
&kp LSHFT   &kp Z     &kp X     &kp C      &kp V      &kp B      &kp N      &kp M      &kp COMMA     &kp DOT   &kp FSLH  &kp ENTER
&kp C_MUTE  &kp LCTRL &kp LALT  &kp LGUI   &kp SPACE  &mo LOWER  &mo LOWER  &kp SPACE  &kp MINUS     &kp LBKT  &kp RBKT
                                                               &kp ENTER  &kp RIGHT  &kp UP  &kp LEFT  &kp DOWN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            label = "lower";

            // ------------------------------------------------------------------------------------------------------------
            // |       | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                | BTCLR|      |       |      |       |  DEL  |
            // |       | LOCK |      |       |       |      |                |      |      |       |      |       |       |
            // | sCAPS |      |      |       |       |      |                |      |      |       |      |       |       |
            // |       |      |      |       |       |      | MUTE |  | SCRN |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&none         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR      &none     &none      &none    &none   &kp DEL
&none         &kp LG(LC(Q)) &none         &none         &none         &none         &none           &none     &none      &none    &none   &none
&kp LG(LS(K)) &none         &none         &none         &none         &none         &none           &none     &none      &none    &none   &none
&none         &none         &none         &none         &none         &none         &none           &none     &none      &none    &none   &none
&kp C_MUTE    &none         &none         &none         &none         &mo LOWER     &mo LOWER           &none     &none      &none    &none
                                                                                    &kp LG(LS(N4))  &kp HOME  &kp PG_UP  &kp END  &kp PG_DN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
